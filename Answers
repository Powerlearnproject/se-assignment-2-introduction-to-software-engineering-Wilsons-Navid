
Questions:
Define Software Engineering: Software engineering is the application of engineering principles, methods, and tools to develop high quality applications.

What is software engineering, and how does it differ from traditional programming? Software engineering is a  more comprehensive way of developing applications, from a  human design centered problem identification to develop the algorithms, coding, deployment, and continous improvement and maintainace.

Software Development Life Cycle (SDLC): SLDC is a standard process of software development spanning from the requirement gathering, design, coding, testing, deployment, and continous maintenance. Ina  more simpler term, they are stages of developing web applications.

Explain the various phases of the Software Development Life Cycle. Provide a brief description of each phase.

Requiremnents: This is where information about the use of the app is collected

Design: This involves the architectural and UI design based on the requirements

Coding: This is where the design is transformed into code

Testing: Test cases are used on the program to make sur it perfoms what  it does.

Deployment: This invovles making the final app available for the final users

Maintenance: It involves continously improving the application so that it meets the current changes in requirements...Updates basically.

Agile vs. Waterfall Models:
Compare and contrast the Agile and Waterfall models of software development. What are the key differences, and in what scenarios might each be preferred? The Agile model is a more flexible approach of development which involves recursive moments from The requirement gathering state to the maintenance depending on the need whereas Waterfall requires that you complete one step at a time from the top to the bottom. Ag

Requirements Engineering: 

What is requirements engineering? Describe the process and its importance in the software development lifecycle.
Software Design Principles:

Explain the concept of modularity in software design. How does it improve maintainability and scalability of software systems?
Testing in Software Engineering:

Describe the different levels of software testing (unit testing, integration testing, system testing, acceptance testing). Why is testing crucial in software development?
Version Control Systems:

What are version control systems, and why are they important in software development? Give examples of popular version control systems and their features.
Software Project Management:

Discuss the role of a software project manager. What are some key responsibilities and challenges faced in managing software projects?
Software Maintenance:

Define software maintenance and explain the different types of maintenance activities. Why is maintenance an essential part of the software lifecycle?
Ethical Considerations in Software Engineering:

What are some ethical issues that software engineers might face? How can software engineers ensure they adhere to ethical standards in their work?
Submission Guidelines:
Your answers should be well-structured, concise, and to the point.
Provide real-world examples or case studies wherever possible.
Cite any references or sources you use in your answers.
Submit your completed assignment by [due date].
